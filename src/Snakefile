## alias csnake='snakemake -j 1000 --cluster-config cluster.yaml --cluster "sbatch -J {rule} -p {cluster.p} --gres {cluster.gres} -n {cluster.n} -t {cluster.t} -c {cluster.c} --mem {cluster.mem} -o slurm/slurm-%j.out -e slurm/slurm-%j.err" '
## invoke with `csnake` in local (src) dir


cmd = """
mkdir -p snake_src01
cp run_isbi.py snake_src01/run_isbi_copy.py
cp detect_isbi.py snake_src01/detect_isbi_copy.py
cp predict.py snake_src01/predict_copy.py
"""

from subprocess import run
run([cmd],shell=True)

import sys
sys.path.append('snake_src01')

localrules:
  runall,
  # isbi_train,
  # isbi_predict,
  # isbi_evaluate,

wildcard_constraints:
  time = '[0-9]{1,3}',
  # k = '[0-9]{1,3}',
  # ed = 'e0[23]'

from itertools import product
import run_isbi_copy as run_isbi
deps = run_isbi.build_snakemake_wcs()

map1 = dict(celegans_isbi='Fluo-N3DH-CE',fly_isbi='Fluo-N3DL-DRO',trib_isbi_proj='Fluo-N3DL-TRIC',trib_isbi='Fluo-N3DL-TRIF')
# map2 = dict(celegans_isbi=celegans_isbi,fly_isbi=fly_isbi,trib_isbi_proj=trib_isbi_proj,trib_isbi=trib_isbi)

rawdirs   = ['celegans_isbi'] #, 'fly_isbi', 'trib_isbi_proj', 'trib_isbi',]
isbinames = [map1[r] for r in rawdirs]
preds     = ['02'] #,'02']
trains    = ['01'] #,'02']

rule runall:
  input:
    [deps.DET_output.format(rawdir=r,isbiname=map1[r],pred=p,train_set=t) for r,p,t in product(rawdirs,preds,trains)]

rule isbi_train:
  output: deps.trainout
  run:
    import run_isbi_copy as run_isbi
    config = run_isbi.choose_config_from_snakemake_wildcards(wildcards)
    import detect_isbi_copy as detect_isbi
    T = detect_isbi.init(config.trainer)
    detect_isbi.train(T,config.trainer)

rule isbi_predict:
  input:  deps.matches_inp_wc, deps.trainout
  output: deps.matches_out_wc
  run:
    import run_isbi_copy as run_isbi
    config = run_isbi.choose_config_from_snakemake_wildcards(wildcards)
    import predict_copy as predict
    predict.isbi_predict(config.predictor)

rule isbi_evaluate:
  input:  deps.all_matches
  output: deps.name_total_scores, deps.name_total_traj, deps.DET_output
  run:
    import run_isbi_copy as run_isbi
    config = run_isbi.choose_config_from_snakemake_wildcards(wildcards)
    import predict_copy as predict
    predict.total_matches(config.evaluator)
    predict.rasterize_isbi_detections(config.evaluator)
    predict.evaluate_isbi_DET(config.evaluator)


