## alias csnake='snakemake -j 1000 --cluster-config cluster.yaml --cluster "sbatch -J {rule} -p {cluster.p} --gres {cluster.gres} -n {cluster.n} -t {cluster.t} -c {cluster.c} --mem {cluster.mem} -o slurm/slurm-%j.out -e slurm/slurm-%j.err" '
## invoke with `csnake` in local (src) dir


cmd = """
mkdir -p snake_src01
cp experiments.py snake_src01/experiments_copy.py
cp detector.py snake_src01/detector_copy.py
cp isbi_tools.py snake_src01/isbi_tools_copy.py
"""

import os
import time
from subprocess import run
run([cmd],shell=True)

import sys
sys.path.append('snake_src01')

localrules:
  runall,
  # isbi_train,
  # isbi_predict,
  # isbi_evaluate,

wildcard_constraints:
  time = '[0-9]{1,3}',
  # k = '[0-9]{1,3}',
  # ed = 'e0[23]'

from itertools import product
import experiments_copy
deps = experiments_copy.build_snakemake_deps()

bad_nodes = ["r02n08"]

rule runall:
  input:
    deps.target

rule isbi_train:
  output: deps.train.outputs
  run:
    print(os.uname())
    # if os.uname().nodename in bad_nodes: time.sleep(60*60*8)
    experiments_copy.isbi_train(input,output,wildcards)

rule isbi_predict:
  input:  deps.pred.inputs
  output: deps.pred.outputs, 
  run:
    print(os.uname())
    # if os.uname().nodename in bad_nodes: time.sleep(60*60*8)
    experiments_copy.isbi_predict(input,output,wildcards)

rule isbi_evaluate:
  input:  deps.eval.inputs
  output: deps.eval.outputs
  run:
    print(os.uname())
    experiments_copy.isbi_evaluate(input,output,wildcards)

rule special:
  run:
    experiments_copy.special()






